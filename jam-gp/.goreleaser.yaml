before:
  hooks:
    - go mod tidy

# Runs 'go build'
builds:
  - flags:
      # If you do not run your builds from a consistent directory structure, pass -trimpath to flags.
      - -trimpath
      - -v

    ldflags:
      # https://www.digitalocean.com/community/tutorials/using-ldflags-to-set-version-information-for-go-applications
      - >
        -X 'go.jlucktay.dev/version.buildDate={{ .Date }}'
        -X 'go.jlucktay.dev/version.builtBy=GoReleaser'
        -X 'go.jlucktay.dev/version.commit={{ .ShortCommit }}'
        -X 'go.jlucktay.dev/version.executable={{ .ProjectName }}'
        -X 'go.jlucktay.dev/version.version={{ .Version }}'

    env:
      - CGO_ENABLED=0

    # List of combinations of GOOS + GOARCH + GOARM to ignore.
    ignore:
      - goos: darwin
        goarch: "386"

    # Set the modified timestamp on the output binary, typically you would do this to ensure a build was reproducible.
    # Pass empty string to skip modifying the output.
    mod_timestamp: "{{ .CommitTimestamp }}"

archives:
  - replacements:
      386: i386
      amd64: x86_64
      darwin: Darwin
      linux: Linux
      windows: Windows

checksum:
  name_template: "checksums.txt"

snapshot:
  name_template: "{{ .Tag }}-next"

brews:
  - # GitHub repository to push the formula to.
    tap:
      owner: jlucktay
      name: homebrew-tap

      # Optionally a token can be provided, if it differs from the token provided to GoReleaser.
      token: "{{ .Env.HOMEBREW_TOKEN }}"

    # Folder inside the repository to put the formula.
    folder: HomebrewFormula

    # Caveats for the user of your binary.
    caveats: |
      Please see the README for usage instructions:
      https://github.com/jlucktay/jam-gp/blob/main/README.md

    # Your app's homepage.
    homepage: https://github.com/jlucktay/jam-gp

    # Template of your app's description.
    description: |
      My living template for new Go repositories

    # Setting this will prevent goreleaser to actually try to commit the updated formula - instead, the formula file
    # will be stored on the dist folder only, leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap in case there is an indicator for prerelease
    # in the tag e.g. v1.0.0-rc1
    # Default is false.
    skip_upload: "false"

    # SPDX identifier of your app's license.
    license: MIT

    # # Packages your package depends on.
    # dependencies:
    #   - git
    #   - zsh

    # # Packages that conflict with your package.
    # conflicts:
    #   - svn
    #   - bash

    # So you can `brew test` your formula.
    test: |
      system "#{bin}/jam-gp"

    # # Custom install script for brew.
    # install: |
    #   bin.install "jam-gp"
    #   output = Utils.popen_read("#{bin}/jam-gp completion bash")
    #   (bash_completion/"jam-gp").write output
    #   prefix.install_metafiles

changelog:
  # Set it to true if you wish to skip the changelog generation.
  skip: false

  # Sorts the changelog by the commit's messages.
  # Could either be 'asc', 'desc', or 'empty'.
  sort: asc

  filters:
    # Commit messages matching the regexp listed here will be removed from the changelog.
    exclude:
      - "^docs"
      - "^test"
